#### Preconfiguration file
##
##  The following preseeding might be used to install a basic system
##  completely automatically.
##
##  A user 'ansible' is set up and ssh login with public key
##  authentication is configured.  The idea is to allow further
##  customization of the system after installation using ansible.
##
##  Modify at least the public ssh key in 'authorized_keys' (see
##  below).
##
##  For more examples and comments consult:
##    https://www.debian.org/releases/stable/example-preseed.txt
##

## To change default values:
#d-i foo/bar seen false
#d-i foo/bar string value

## Useful boot parameters:
## DEBCONF_DEBUG=5
## locale?=de_DE

# Preseeding only locale sets language, country and locale:
d-i debian-installer/locale string en_US
d-i keyboard-configuration/xkb-keymap select en

## Use hostname assigned by DHCP:
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string v.ignum.cz

## Skip root account:
#d-i passwd/root-login boolean false

# or set root passwd
d-i passwd/root-password password opicihlava
d-i passwd/root-password-again password opicihlava

### Apt setup
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true

d-i mirror/country string manual
d-i mirror/http/hostname string debian.ignum.cz
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### Backports:
#apt-setup-udeb apt-setup/services-select multiselect security, updates, backports

### Ansible User
d-i passwd/user-fullname string Default User
d-i passwd/username string debian
d-i passwd/user-password password opicihlava
d-i passwd/user-password-again password opicihlava
#d-i passwd/user-password-crypted password [crypt(3) hash]

##################################################################################
###################### Partitioning hell....... ##################################

d-i partman/choose_label string gpt
d-i partman/default_label string gpt
d-i partman/confirm_write_new_label boolean true

d-i partman-basicfilesystems/choose_label string gpt
d-i partman-basicfilesystems/default_label string gpt
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt
d-i partman/choose_label string gpt
d-i partman/default_label string gpt
partman-partitioning partman-partitioning/choose_label select gpt
d-i partman/confirm_write_new_label boolean true


d-i partman/early_command string \
    COUNT=0; \
    for DISK in $(list-devices disk | sort); do \
        DNM=`echo "${DISK}" | grep -o '[^/]*$'`; \
        DSIZE=`cat /proc/partitions | tr -s ' ' | grep "${DNM}\$" | cut -d' ' -f4`; \
        if [ ${DSIZE} -ge 20000000 ]; then \
            DISKS="${DISKS} ${DISK}"; \
            if [ "$(echo ${DISK} | cut -d'/' -f3)" = "cciss" ]; then \
                RDEVS="${DEVS}${DISK}p2#"; \
            else \
                RDEVS="${DEVS}${DISK}2#"; \
            fi; \
            COUNT=$((COUNT + 1)); \
        fi; \
    done; \
    DISKS=$(echo ${DISKS} | sed "s/^ //g"); \
    RDEVS=$(echo ${RDEVS} | sed "s/#$//g"); \
    debconf-set partman-auto/disk "$DISKS"; \
    echo "Set disks ${DISKS} count ${COUNT}"; \
    if [ "${COUNT}" -ge "2" ]; then \
        debconf-set partman-auto/method "raid"; \
        debconf-set partman-auto-raid/recipe "1 2 0 ext4 / ${RDEVS} ."; \
        if [ -d "/sys/firmware/efi/" ]; then \
            debconf-set partman-auto/expert_recipe "multiraid :: \
                128 256 256 free \
                    \$gptonly{ } \
                    \$primary{ } \
                    \$reusemethod{ } \
                    method{ efi } \
                    format{ } . \
                8192 8192 10240 raid \
                    \$gptonly{ } \
                    \$primary { } \
                    \$bootable{ } \
                    method{ raid } . \
                1 1 -1 raid \
                    \$gptonly{ } \
                    \$primary{ } \
                    method{ raid } . ";\
        else \
            debconf-set partman-auto/expert_recipe "multiraid :: \
                1 1 1 free \
                    \$gptonly{ } \
                    \$primary{ } \
                    \$bios_boot{ } \
                    method{ biosgrub } . \
                8192 8192 10240 raid \
                    \$gptonly{ } \
                    \$primary{ } \
                    \$bootable{ } \
                    method{ raid } . \
                1 1 -1 raid \
                    \$gptonly{ } \
                    \$primary{ } \
                    method{ raid } . ";\
         fi; \
    else \
        debconf-set partman-auto/method "regular"; \
        if [ -d "/sys/firmware/efi/" ]; then \
            debconf-set partman-auto/expert_recipe "boot-root :: \
                128 256 256 free \
                    \$gptonly{ } \
                    \$primary{ } \
                    \$reusemethod{ } \
                    method{ efi } \
                    format{ } . \
                8192 8192 10240 ext4 \
                    \$gptonly{ } \
                    \$primary { } \
                    \$bootable{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext4 } \
                    mountpoint{ / } . \
                1 1 -1 lvm \
                    \$gptonly{ } \
                    \$primary{ } \
                    method{ lvm } . ";\
        else \
            debconf-set partman-auto/expert_recipe "boot-root :: \
                1 1 1 free \
                    \$gptonly{ } \
                    \$primary{ } \
                    \$bios_boot{ } \
                    method{ biosgrub } . \
                8192 8192 10240 ext4 \
                    \$gptonly{ } \
                    \$primary{ } \
                    \$bootable{ } \
                    method{ format } format{ } \
                    use_filesystem{ } filesystem{ ext4 } \
                    mountpoint{ / } . \
                1 1 -1 lvm \
                    \$gptonly{ } \
                    \$primary{ } \
                    method{ lvm } . ";\
        fi; \
    fi

# Ignore missing swap
d-i partman-basicfilesystems/no_swap boolean false

# Install grub in the first device (assuming it is not a USB stick)
d-i grub-installer/bootdev string default


# Remove existing software RAID partitions?
d-i partman-md/device_remove_md boolean true

# Dummy template for preseeding unavailable questions
d-i partman-auto/purge_lvm_from_device boolean true

# Write the changes to the storage devices and configure RAID?
d-i partman-md/confirm boolean true
d-i partman-md/confirm_nooverwrite boolean true

# Write the changes to disks and configure LVM?
d-i partman-lvm/confirm boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# Write the changes to disks? ######### for debug comment out 3 lines below
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Finish partitioning and write changes to disk
d-i partman/choose_partition select finish




############################# End of hell ########################################

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean false

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string Europe/Prague

### Package selection
#tasksel tasksel/first multiselect standard, ssh-server, gnome-desktop, print-server
tasksel tasksel/first multiselect standard, ssh-server

### Individual additional packages to install
#d-i pkgsel/include string firmware-linux ansible git
#d-i pkgsel/include string firmware-linux ansible/stretch-backports git
d-i pkgsel/include string firmware-linux

### GRUB on default disk:
d-i grub-installer/bootdev string default

### This command is run just before the install finishes:
d-i preseed/late_command string \
      mkdir -p /target/root/.ssh && \
      echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCeQg5TjzWeCC3v1meyx8sCcHi9G8mPD1J7o5R4WQYQrplfuALwAJ5v9Ne2lqZDzvQui7QvjfzkRTe/jGR35VKbOGYeaMkQ0tUEM8HimCIcjxdvdZEwGaAbMA2u3L0OXqozSmfZIURGzjf53qIkpAXkUSRrGFl0CEkWZpgDTgVTktJ7SqMnl981jAWDTHLCW7Vf+Fx+GnU1tvafWVw3qk/fTna7fobvg39fG6Ja7JqVF/qw4v74OtRfQjj6TLF03vAhdMmDPr2BVUvizVAhtqqUaJEMwF0yUIrohaDpIwiIx14op+6s9ecoj6wFrrPwknPt1xkPrd5N2VJGls+dkvEQK/GC7d8NNaXKQwQ1i9loMUhbGyalqSYCFVnYriAQMANTdqLBoLo/wqGagillgGtgZhIKIcpA+RgJ8I0FfpdDqAsrT9S9BUKMMpd9Eai9SiWmHq38XqjQwpfBEqg9hTcAwq80k9yv/Af5yJD7416N7xwRn5l4kBXbYdP5Ezwlm6yGY25OQEuz2n6izY2lZ3nHDuADsvRddpt4RdBSVDePAXeDl4nH42YxGAbgWb/vCx7RFQNdcl7F1iz3N98gaTKCOIwmqyJ3TmBp47A8Trwtol7FEpzUDI/2elOgOo2FvwlO7mp4ZAjkcFW15ca0UMCEjxx49PQ5V62Q+3DcOgGLRw== tmshlvck@gmail.com" >> /target/root/.ssh/authorized_keys ; \
      in-target chown -R root:root /root/.ssh/ ; \
      in-target chmod -R og= /root/.ssh/
#
### Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note
